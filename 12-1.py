# The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

# Let us list the factors of the first seven triangle numbers:

#      1: 1                 1
#      3: 1,3               1 2
#      6: 1,2,3,6           1 2 3
#     10: 1,2,5,10          1 2 3 4
#     15: 1,3,5,15
#     21: 1,3,7,21
#     28: 1,2,4,7,14,28

# We can see that 28 is the first triangle number to have over five divisors.

# What is the value of the first triangle number to have over five hundred divisors?

import time

def nb_factors(n):
    tot = 0
    for i in range(1,n):
        if n % i == 0 :
            tot += 1
    return tot

record_div = 319
nb_record = 2162160
t = 2162160
i = 2080
# while record_div < 600 :
#     t += i
#     i += 1
#     nf = nb_factors(t)
#     if nf > record_div :
#         record_div = nf
#         nb_record = t
#         print nb_record,"::",record_div,"::",t,"+",i

def is_triangle(n):
    subtot = 0
    for i in range(n):
        subtot += i
        if subtot == n :
            return True
    return False

print is_triangle(17907120)
print nb_factors(17907120)