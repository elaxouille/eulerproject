# The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

# Let us list the factors of the first seven triangle numbers:

#      1: 1
#      3: 1,3
#      6: 1,2,3,6
#     10: 1,2,5,10
#     15: 1,3,5,15
#     21: 1,3,7,21
#     28: 1,2,4,7,14,28

# We can see that 28 is the first triangle number to have over five divisors.

# What is the value of the first triangle number to have over five hundred divisors?

# etape 1 : faire la liste de tous les nombres triangles en dessous de 1 million
import time


##### NE PAS RECOMMENCER DU DEBUT !!!!!!!!!!!!!


liste_de_nombres_tri = []
avance = 1

record_de_diviseurs = 0
record = 0
##### NE PAS RECOMMENCER DU DEBUT !!!!!!!!!!!!!
subtotal = 0
while record_de_diviseurs < 600 :
    # time.sleep(1)
    print "record :\t",record,"record de div :\t", record_de_diviseurs, "en cours :\t",avance
    # subtotal = 0
    nbdiv = 1
    for i in range(avance):
        # print i
        subtotal += i
    # liste_de_nombres_tri.append(subtotal)
    # print "test :\t\t", subtotal##### NE PAS RECOMMENCER DU DEBUT !!!!!!!!!!!!!
    subtotal += avance
    # print "sub",subtotal

    for x in range(1,subtotal):
        if subtotal % x == 0 :##### NE PAS RECOMMENCER DU DEBUT !!!!!!!!!!!!!

            nbdiv += 1##### NE PAS RECOMMENCER DU DEBUT !!!!!!!!!!!!!

    # print "diviseurs :\t", nbdiv,"\n\n"
    if nbdiv > record_de_diviseurs :
        record_de_diviseurs = nbdiv##### NE PAS RECOMMENCER DU DEBUT !!!!!!!!!!!!!
  
        record = subtotal##### NE PAS RECOMMENCER DU DEBUT !!!!!!!!!!!!!

        print subtotal,"=>",nbdiv
    subtotal = 0
    avance += 1

# print "fini de faire la liste, commence a chercher les diviseurs"


# for l in liste_de_nombres_tri:
#     print "en train de tester :",l
#     nombre_de_diviseurs = 0
#     for i in range(1,l):
#         if l % i == 0 :
#             nombre_de_diviseurs += 1
#     if nombre_de_diviseurs > 499 :
#         print l,"a",nombre_de_diviseurs,"diviseurs"